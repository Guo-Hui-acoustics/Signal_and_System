% mynotes.sty - 我的个人笔记样式文件 

% 0. 文件标识
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{mynotes}[2025/10/06 My Personal Notes Style]

% 1. 引入依赖的宏包 
\usepackage{newtxtext} 
\usepackage{inconsolata}
\usepackage[T1]{fontenc}
\usepackage[a4paper, top=2.54cm, bottom=2.54cm, left=1.91cm, right=1.91cm]{geometry}
\usepackage{lipsum}   
\usepackage{abstract} 
\usepackage{graphicx} 
\usepackage{float}    
\usepackage{subcaption} 
\RequirePackage{setspace}
\setstretch{1.5}
\usepackage{amsmath}   
\usepackage{amssymb}
\usepackage{arydshln} 
\usepackage{empheq}
\usepackage{tikz} 
\usetikzlibrary{tikzmark}     
\usetikzlibrary{fit}          
\usetikzlibrary{positioning}  
\usepackage{color}
\usetikzlibrary{arrows.meta}
\usetikzlibrary{positioning} 
\usetikzlibrary{shapes.geometric, calc, tikzmark} 
\usepackage{pgfplots}
\pgfplotsset{compat=1.18} 
\usepgfplotslibrary{groupplots}
\usepackage{xcolor}  
\definecolor{lightblue}{rgb}{0.2, 0.4, 0.8} 
\usepackage{hyperref} 
\hypersetup{
    colorlinks=true, linkcolor=blue, citecolor=green, 
    urlcolor=cyan, linkbordercolor={1 1 1},
}
\renewcommand{\eqref}[1]{\hyperref[#1]{\textup{\tagform@{\ref*{#1}}}}}
\usepackage{nameref} 


% 2. 为封面页定义新的存储命令
\newcommand{\notetitle}[1]{\def\@notetitle{#1}}
\newcommand{\noteauthor}[1]{\def\@noteauthor{#1}}
\newcommand{\notedate}[1]{\def\@notedate{#1}}
\newcommand{\noteabstract}[1]{\def\@noteabstract{#1}}
% 2.1. 为新封面布局声明变量
\newsavebox{\ContentAboveRuleBox}
\newdimen{\TotalBoxHeight}
\newdimen{\SpaceBefore}
% 2.3. 生成封面页
%    创建命令来生成 *新的* 封面页
%    这个命令现在包含了 'lrbox' 测量和 'titlepage' 布局
% 2.3. 生成封面页
%    创建命令来生成 *新的* 封面页
%    这个命令现在包含了 'lrbox' 测量和 'titlepage' 布局
% 2.3. 生成封面页
%    创建命令来生成 *新的* 封面页
%    这个命令现在包含了 'lrbox' 测量和 'titlepage' 布局
% 2.3. 生成封面页
%    创建命令来生成 *新的* 封面页
%    这个命令现在包含了 'lrbox' 测量和 'titlepage' 布局
\newcommand{\makenotetitle}{
    % 测量和计算
    % (这必须在 \begin{document} 之后执行，所以我们把它放在这里)
    \begin{lrbox}{\ContentAboveRuleBox}
        \begin{minipage}{\linewidth} % 使用 minipage 确保宽度正确
            % 1. 标题与作者 (使用 \@notetitle 和 \@noteauthor 变量)
            {\Huge \centering  \@notetitle \par}
            {\large \hfill \@noteauthor \par}

            % 2. 顶部横线
            \noindent\rule{\linewidth}{2pt}\par
            
            \vspace{0.5cm} % 顶部横线下的间距 (您可以按需调整)
            \begin{center}
                % --- TikZ 图像开始 ---
                \begin{tikzpicture}[
                    scale=1.8, % <--- 在这里调整图像的整体大小以适应封面
                    font=\normalsize, % 字体大小
                    node distance=2.5cm and 2.5cm,
                    % 样式：定义一个灰色填充的矩形框
                    block/.style={
                        draw, 
                        fill=gray!20, 
                        rectangle, 
                        minimum height=1.2cm, 
                        minimum width=2.5cm, 
                        align=center
                    },
                    % 样式：用于多行标签
                    io_label/.style={
                        align=left
                    },
                    % 样式：设置默认箭头
                    >=Stealth
                  ]
                  
                  % --- 顶行 (时域) ---
                  \node (x_t) {$x(t)$};
                  \node (h_t) [block, right=of x_t] {$h(t)$};
                  \node (y_t) [io_label, right=of h_t] {$y(t) = h(t) * x(t)$};
                  \draw [->] (x_t) -- (h_t);
                  \draw [->] (h_t) -- (y_t.west); 

                  % --- 端口 ---
                  \node (in_term_open) [below=0.7cm of x_t] {}; 
                  \draw (in_term_open.center) circle (2pt);
                  \node (in_term_closed) [below=0.5cm of in_term_open] {}; 
                  \draw [fill=black] (in_term_closed.center) circle (2pt);
                  \draw (in_term_open.center) ++(0, -2pt) -- (in_term_closed.center); 
                  \node (out_term_open) at (y_t.west |- in_term_open.center) {}; 
                  \draw (out_term_open.center) circle (2pt);
                  \node (out_term_closed) [below=0.5cm of out_term_open] {};
                  \draw [fill=black] (out_term_closed.center) circle (2pt);
                  \draw (out_term_open.center) ++(0, -2pt) -- (out_term_closed.center);
                  
                  % --- 底行 (S 域 / 频域) ---
                  \node (x_s) [io_label, below=of x_t] {$X(s)$ \\ $X(j\omega)$}; 
                  \node (h_s) [block, at={(h_t.center |- x_s.center)}] {$H(s)$ \\ $H(j\omega)$};
                  \node (y_s) [io_label, right=of h_s] {
                    $\begin{aligned}
                      Y(s) &= H(s) \cdot X(s) \\
                      Y(j\omega) &= H(j\omega) \cdot X(j\omega)
                    \end{aligned}$
                  };
                  \draw [->] (x_s) -- (h_s); 
                  \draw [->] (h_s) -- (y_s.west); 
                  \node [
                      draw, black,                   % 绘制黑色边框
                      rounded corners=3pt,           % 轻微的圆角
                      % 适配所有外部节点
                      fit=(x_t) (y_t) (in_term_closed) (out_term_closed) (x_s) (y_s), 
                      inner sep=15pt                 % 边框与内容的间距 (可调整)
                  ] {};
                \end{tikzpicture}
            \end{center}
            \vspace{0.2cm} % 底部横线上的间距 (您可以按需调整)

        \end{minipage}
    \end{lrbox}
    % 计算总高度
    \TotalBoxHeight=\dimexpr\ht\ContentAboveRuleBox + \dp\ContentAboveRuleBox\relax
    % 计算顶部空白 (使用 geometry 设置的 1in 边距)
    \SpaceBefore=\dimexpr 0.5\paperheight - 1in - \TotalBoxHeight \relax
    % 标题页渲染
    \begin{titlepage}
        \pagestyle{empty} % 标题页不显示页码
        % 插入我们计算好的顶部空白
        \vspace*{\SpaceBefore}
        
        % 渲染 "保存盒" 里的所有内容
        \noindent\usebox{\ContentAboveRuleBox}\par
        
        % 渲染底部的横线 (精确位于页面 1/2 处)
        \noindent\rule{\linewidth}{2pt}\par
        
        % 页脚信息
        \vfill 
        \small % 页脚使用小号字体
        % 版权行 (使用 \@noteauthor 和 \@notedate 变量)
        Copyright \copyright\ \@noteauthor\ \@notedate  \ (\href{gh20222734@163.com}{gh20222734@163.com})
        \par 
        % 许可证行 (占位符)
        This work is licensed under a Creative Commons Attribution 4.0 International License.
        \par 
        % 链接行 (占位符)
        Project repository: \url{https://github.com/Guo-Hui-acoustics/Signal_and_System}
        %\par
        %Document source: \url{https://example.com/notes/download}
    \end{titlepage}
}

% 3. 创建一个命令来生成 *单独的* 摘要页
\newcommand{\makeabstractpage}{
    \newpage % 开始新的一页
    \thispagestyle{empty} % 本页不显示页码
    % 1. 手动创建左对齐、加粗的 "Abstract" 标题
    \noindent{\Large\bfseries Abstract\par} 
    % 2. 打印摘要内容。
    \@noteabstract
    \clearpage % 结束本页
}


% 4. 自定义图片插入命令
% (这部分保持不变)
    % 4.1. 单图插入命令 \insertsingleimage
        \newcommand{\insertsingleimage}[3]{
            \begin{figure}[H]
                \centering
                \includegraphics[width=0.7\textwidth]{#1}
                \caption{#2}
                \label{#3}
            \end{figure}
        }
    % ( ... 你其他的自定义命令 ... )
    \newcommand{\insertdoubleimage}[8]{
            \begin{figure}[H]
                \centering
                % 第一个子图
                \begin{subfigure}[b]{0.48\textwidth}
                    \centering
                    \includegraphics[width=\textwidth]{#1}
                    \caption{#2}
                    \label{#3}
                \end{subfigure}
                \hfill % 水平间距
                % 第二个子图
                \begin{subfigure}[b]{0.48\textwidth}
                    \centering
                    \includegraphics[width=\textwidth]{#4}
                    \caption{#5}
                    \label{#6}
                \end{subfigure}
                \caption{#7}
                \label{#8}
            \end{figure}
        }

% 5. 自定义一个插入 TikZ 图像的命令
% (这部分保持不变)
    \newcommand{\inserttikzpicture}[3]{
        \begin{figure}[H]
            \centering
            \begin{tikzpicture}[
                scale=1.2,
                font=\small
            ]
                % 参数 #1: 用户输入的 TikZ 绘图代码会在这里展开
                #1
            \end{tikzpicture}
            \caption{#2} % 参数 #2: 图片标题
            \label{#3}   % 参数 #3: 图片标签
        \end{figure}
    }

% 6. 自定义表格插入命令
% (这部分保持不变)
    \newcommand{\inserttable}[4]{
        \begin{table}[H] % 使用 [H] 选项让表格出现在代码所在的位置
            \centering   % 表格整体居中
            \caption{#3} % 设置表格标题
            \label{#4}   % 设置表格标签
            \begin{tabular}{#1} % #1 是用户传入的列格式
                \hline \hline % 表格顶部的双横线，更具学术风格
                % #2 是用户传入的表格内容
                #2 \\
                \hline \hline % 表格底部的双横线
            \end{tabular}
        \end{table}
    }

    
% 7. 自定义代码块插入命令，依赖 minted 宏包
% (这部分保持不变)
\usepackage{minted}
\setminted{
    frame=single, framesep=2mm, fontsize=\small, 
    breaklines, tabsize=4, python3=true         
}
\definecolor{bg}{rgb}{0.16, 0.16, 0.18} 
    \newcommand{\insertcodefromfile}[4]{
        \begin{figure}[H]
            \centering
            \inputminted{#1}{#2}
            \caption{#3}
            \label{#4}
        \end{figure}
    }